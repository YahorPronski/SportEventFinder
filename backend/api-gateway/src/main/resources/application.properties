spring.application.name=api-gateway

server.port=8080
server.error.include-message=always

jwt.access.secret=mu1ERAdl8wfNhJa2YW7HJLan1MrqwsHxEA424aoK1+3Tn6XsThY86WpSLWD9fxbeCEjYnXATb+nb6m2juS11Qg==

# Authorization Server Route
spring.cloud.gateway.routes[0].id=auth-server
spring.cloud.gateway.routes[0].uri=lb://auth-server
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/auth/**

# User Service Route
spring.cloud.gateway.routes[1].id=user-service
spring.cloud.gateway.routes[1].uri=lb://user-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/users/**
spring.cloud.gateway.routes[1].filters[0]=JwtAuthFilter

# Post Service Route
spring.cloud.gateway.routes[2].id=post-service
spring.cloud.gateway.routes[2].uri=lb://post-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/posts/**
spring.cloud.gateway.routes[2].filters[0]=JwtAuthFilter

# CORS Policy
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedOrigins=http://localhost:3000/
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedMethods=*

# idk what is this but it fixes spring cloud gateway and eureka conflict
spring.main.web-application-type=reactive

